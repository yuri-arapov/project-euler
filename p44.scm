;; 23 March 2008
;; 
;; Yuri Arapov <yuridichesky@gmail.com>
;; 
;; Project Euler
;; 
;; http://projecteuler.net/index.php?section=problems&id=44
;;
;; Problem 44
;; 23 May 2003
;;
;; Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
;; pentagonal numbers are:
;;
;; 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
;;
;; It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
;; 70 − 22 = 48, is not pentagonal.
;;
;; Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
;; difference is pentagonal and D = |Pk − Pj| is minimised; what is the value
;; of D?
;;
;; Answer: ???


(load "range.scm")
(load "print.scm")


(define (pentagonal n)
  (/ (* n (- (* 3 n) 1)) 2))


(define (pentagonal? p)
  (let ((n (/ (+ 1 (expt (+ 1 (* 24 p)) 0.5)) 6)))
    (if (integer? n)
      (inexact->exact n)
      #f)))


(define (p44 limit)

  (let* ((pentagonals (list->vector (map pentagonal (range 0 limit))))
         (pp          (list->vector (map pentagonal? (range 0 (* 2 (pentagonal limit)))))))

    (define (p? n)
      (vector-ref pp n))

    (define (loop res j k)
      (cond ((= k j) 
             (if (zero? (remainder (+ j 1) 100))
               (println (+ j 1)))
             (loop res (+ j 1) 1))
            ((> j limit) res)
            (else
              (let* ((pk (vector-ref pentagonals k))
                     (pj (vector-ref pentagonals j))
                     (d  (- pj pk)))

;;                (if (pentagonal? (- pj pk))
;;                  (println "- " j " " k " " (pentagonal? (- pj pk))))
;;                (if (pentagonal? (+ pj pk))
;;                  (println "+ " j " " k " " (pentagonal? (+ pj pk))))

                (if (and (p? (+ pk pj)) 
                         (p? d)
                         (< d (car res)))
                  (loop (list d k pk j pj) j (+ k 1))
                  (loop res                j (+ k 1)))))))

    (loop (list (expt 100 10)) 2 1)))


;; end of file
